<%- include ('./partials/head') %>

<main>
    <!-- Top info blocks -->
    <div class="top-info">
        <!-- Game info -->
        <section class="game-info component">
            <p class="primary"><%- data.gameId %></p>
            <p class="primary"><%- data.gameStatus %></p>
            <p class="primary"><%- data.division %></p>
            <p class="primary"><%- data.field %></p>
            <p class="secondary"><%- data.broadcaster %></p>
            <p class="secondary"><%- data.playByPlayCommentatorName %></p>
            <p class="secondary"><%- data.colourCommentatorName %></p>
        </section>

        <!-- Center block -->
        <div class="center-block">
            <!-- Legend -->
            <section class="legend component">
                <p class="green">Goals</p>
                <p class="blue">Assists</p>
                <p class="red">Blocks</p>
                <p class="yellow">Turnovers</p>
            </section>

            <!-- Tab selector -->
            <section class="tabs component">
                <p>Points</p>
                <p>Stats</p>
                <p>Config</p>
            </section>
        </div>

        <!-- Team info -->
        <section class="team-info component">
            <div class="team">
                <!-- Flag based on Olympic Code -->
                <img src="https://flagsapi.com/<%- data.team1CountryISO2Code %>/flat/64.png" alt="Flag of <%- data.team1CountryName %>">

                <!-- Info about team such as name and olympic code -->
                <div class="team-desc">
                    <p class="teamName"><%- data.team1Name %></p>
                    <p class="teamCountry">(<%- data.team1CountryOlympicCode %>)</p>
                </div>
            </div>
            <div class="score">
                <p class="gameScore"><%- parsedStats.team1Score %> - <%- parsedStats.team2Score %></p>
            </div>
            <div class="team">
                <!-- Flag based on Olympic Code -->
                <img src="https://flagsapi.com/<%- data.team2CountryISO2Code %>/flat/64.png" alt="Flag of <%- data.team2CountryName %>">

                <!-- Info about team such as name and olympic code -->
                <div class="team-desc">
                    <p class="teamName"><%- data.team2Name %></p>
                    <p class="teamCountry">(<%- data.team2CountryOlympicCode %>)</p>
                </div>
            </div>
        </section>
    </div>

    <!-- Statistics -->
    <section class="stats">
        <!-- Stats per player team one -->
        <div class="team-one-players component">
            <!-- Individual player card -->

            <% data.team1Players.forEach(player => { %>
                <div class="player-card flex-default">
                    <!-- Left side of card -->
                    <div class="jerseyNum">
                        <p><%- player.jerseyNumber %></p>
                    </div>
    
                    <!-- Right side of card -->
                    <div class="player-stats">
                        <p><%- player.name %></p>
                        <div class="actions">
                            <div class="goal"><p><%- parsedStats.scoredPoints.filter(sp => sp.scoredBy === player.playerId).length %></p></div>
                            <div class="assist"><p><%- parsedStats.scoredPoints.filter(sp => sp.assistBy === player.playerId).length %></p></div>
                            <div class="block">
                                <p>
                                    <%- parsedStats.scoredPoints.reduce((count, sp) => {
                                        if (sp.blockPlayers) { // need to check that there is a blockPlayers object before working on it for backwards compatibility
                                            return count = count + sp.blockPlayers.filter(bp => bp === player.playerId).length
                                        } else {
                                            return count = 0
                                        }
                                    }, 0); %>
                                </p>
                            </div>
                            <div class="turnover">
                                <p>
                                    <%- parsedStats.scoredPoints.reduce((count, sp) => {
                                        if (sp.turnoverPlayers) { // need to check that there is a turnoverPlayers object before working on it for backwards compatibility
                                            return count = count + sp.turnoverPlayers.filter(tp => tp === player.playerId).length
                                        } else {
                                            return count = 0
                                        }
                                    }, 0); %>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>

        <!-- Score statistics -->
    <div class="scoreboard">
        <table>
            <thead>
                <tr>
                    <th>Pass</th>
                    <th>Turn</th>
                    <th>O/D</th>
                    <th colspan="3">Score</th>
                    <th>O/D</th>
                    <th>Turn</th>
                    <th>Pass</th>
                </tr>
            </thead>
            <tbody>
                <% parsedStats.scoredPoints.forEach(scoreStat => { %>
                    <tr>
                        <td><%- scoreStat.team1Passes %></td>
                        <td><%- scoreStat.team1Turnovers %></td>
                        <td><%- scoreStat.team1OorD %></td>
                        <td><%- scoreStat.team1Score %></td>
                        <td>-</td>
                        <td><%- scoreStat.team2Score %></td>
                        <td><%- scoreStat.team2OorD %></td>
                        <td><%- scoreStat.team2Turnovers %></td>
                        <td><%- scoreStat.team2Passes %></td>
                    </tr>
                <% }) %>
            </tbody>
        </table>
    </div>

        <!-- Stats per player team two -->
        <div class="team-two-players component">
            <!-- Individual player card -->
            <% data.team2Players.forEach(player => { %>
                <div class="player-card flex-reversed">
                    <!-- Left side of card -->
                    <div class="jerseyNum">
                        <p><%- player.jerseyNumber %></p>
                    </div>
    
                    <!-- Right side of card -->
                    <div class="player-stats stats-reversed">
                        <p><%- player.name %></p>
                        <div class="actions">
                            <div class="goal"><p><%- parsedStats.scoredPoints.filter(sp => sp.scoredBy === player.playerId).length %></p></div>
                            <div class="assist"><p><%- parsedStats.scoredPoints.filter(sp => sp.assistBy === player.playerId).length %></p></div>
                            <div class="block">
                                <p>
                                    <%- parsedStats.scoredPoints.reduce((count, sp) => {
                                        if (sp.blockPlayers) { // need to check that there is a blockPlayers object before working on it for backwards compatibility
                                            return count = count + sp.blockPlayers.filter(bp => bp === player.playerId).length
                                        } else {
                                            return count = 0
                                        }
                                    }, 0); %>
                                </p>
                            </div>
                            <div class="turnover">
                                <p>
                                    <%- parsedStats.scoredPoints.reduce((count, sp) => {
                                        if (sp.turnoverPlayers) { // need to check that there is a turnoverPlayers object before working on it for backwards compatibility
                                            return count = count + sp.turnoverPlayers.filter(tp => tp === player.playerId).length
                                        } else {
                                            return count = 0
                                        }
                                    }, 0); %>
                                </p>
                            </div>
                        </div>
                    </div>
                </div>
            <% }) %>
        </div>
    </section>
</main>

<%- include ('./partials/footer') %>